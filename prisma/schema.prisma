// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id       Int        @id @default(autoincrement())
  name     String
  Exercise Exercise[]
}

model DayOfWeek {
  id          Int    @id @default(autoincrement())
  day_of_week String
}

model Equipment {
  id       Int        @id @default(autoincrement())
  name     String
  Exercise Exercise[]
}

model Language {
  id         Int        @id @default(autoincrement())
  full_name  String
  short_name String
  Exercise   Exercise[]
}

model Licence {
  id         Int        @id @default(autoincrement())
  full_name  String
  short_name String
  url        String
  Exercise   Exercise[]
}

model Exercise {
  id                     Int                      @id @default(autoincrement())
  licence                Licence                  @relation(fields: [licenceId], references: [id])
  licenceId              Int
  license_author         String
  name                   String
  name_original          String?
  status                 String?
  description            String
  creation_date          DateTime                 @default(now())
  language               Language                 @relation(fields: [languageId], references: [id])
  languageId             Int
  uuid                   String                   @db.Uuid
  category               Category                 @relation(fields: [categoryId], references: [id])
  categoryId             Int
  variations             String?
  muscles                Muscles[]
  equipment              Equipment[]
  TemplateExercisePieces TemplateExercisePieces[]
}

model Muscles {
  id       Int        @id @default(autoincrement())
  is_front Boolean    @default(true)
  name     String
  Exercise Exercise[]
}

model RepetitionUnits {
  id      Int       @id @default(autoincrement())
  name    String
  RepPair RepPair[]
}

model WeightUnits {
  id   Int    @id @default(autoincrement())
  name String
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @db.VarChar(255)
  content   String?
  published Boolean  @default(false)
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  user   User    @relation(fields: [userId], references: [id])
  userId Int     @unique
}

model RepPair {
  id                 Int                    @id @default(autoincrement())
  reptype            RepetitionUnits        @relation(fields: [repetitionUnitsId], references: [id])
  reps               Int
  repetitionUnitsId  Int
  TemplateExercise   TemplateExercisePieces @relation(fields: [templateExerciseId], references: [id])
  templateExerciseId Int
}

model TemplateExercisePieces {
  id                Int              @id @default(autoincrement())
  exercise          Exercise         @relation(fields: [exerciseId], references: [id])
  exerciseId        Int
  rep_pair          RepPair[]
  WorkoutTemplate   WorkoutTemplate? @relation(fields: [workoutTemplateId], references: [id])
  workoutTemplateId Int?
}

model WorkoutTemplate {
  id     Int                      @id @default(autoincrement())
  name   String
  user   User                     @relation(fields: [userId], references: [id])
  userId Int
  pieces TemplateExercisePieces[]
}

model User {
  id              Int               @id @default(autoincrement())
  external_id     String?           @unique
  email           String            @unique
  firstname       String
  lastname        String
  age             Int?
  passwordhash    String?
  salt            String?
  auth_string     String?
  joining_date    DateTime
  posts           Post[]
  profile         Profile?
  WorkoutTemplate WorkoutTemplate[]
}
